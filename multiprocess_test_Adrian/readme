

Setup:

- Install HSA runtime and driver
- Install Kalmar compiler and runtime
   * get the Kalmar bits from \\pae\public\scchan\share\kalmar_hsa1.0f_spir_build\20150625\ and install the packages
   * get the HLC bits from \\pae\public\scchan\share\hlc_hsa1.0f_build\, extract the tarball and put the binaries in /opt/amd/bin/

- run "compileme" to compile test


What this test does:


The fork_exec is a tool that forks out new processes and exec the user specified exe in the new processes.

The async_array_add is a C++ program compiled with Kalmar that runs a simple vector add in a parallel_for_each (kernel).
The vector add is launched asynchronously: The Kalmar runtime calls the HSA API to launch the kernel using the main host thread.
After launching the kernel, the Kalmar runtime spawns a new CPU thread (invisible in the user code) that waits for the HSA completion signal. 

The issue is that eventually (you may have to re-run the runme tests several times), you shall see the tests will start to fail 
with the "### Error: 4104 at line:496" message.  The 4104 is the error code from the hsa_queue_create API.

From dmesg, you would find error messages from the kfd:

[  559.245013] kfd: qcm fence wait loop timeout expired
[  559.245023] kfd: the cp might be in an unrecoverable state due to an unsuccessful queues preemption
[  559.301547] amdkfd: didn't found vmid for pasid (21)
[  584.155957] kfd: qcm fence wait loop timeout expired
[  584.155972] kfd: the cp might be in an unrecoverable state due to an unsuccessful queues preemption
[  584.188208] amdkfd: didn't found vmid for pasid (5)


