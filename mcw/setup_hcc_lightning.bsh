#!/bin/bash


NUM_THREADS=32
CMAKE_BUILD_TYPE=Release

HCC_DRIVER=https://github.com/RadeonOpenCompute/hcc.git
HCC_DRIVER_CHECKOUT="master"

CLANG_URL=https://github.com/RadeonOpenCompute/hcc-clang.git

SCCHAN_HCC_DRIVER="https://github.com/scchan/hcc.git"
SCCHAN_CLANG_URL="https://github.com/scchan/hcc-clang.git"

LIGHTNING="https://github.com/llvm-mirror/llvm.git"
LIGHTNING_CHECKOUT="master"

LLD="https://github.com/llvm-mirror/lld.git"
LLD_CHECKOUT="master"

AMDPHDRS_CHECKOUT="master"

HSA_AMDGPU_GPU_TARGET=fiji
CXXAMP_ENABLE_BOLT="OFF" 
HCC_RUNTIME_CFLAGS=""
PROJECT_GENERATORS="Unix Makefiles"

DEBUG_CMAKE=""
SKIP_HCC_CHECKOUT=0

while [[ "$#" > 0 ]]; do case $1 in
  --build)  CMAKE_BUILD_TYPE="$2";;
  --threads) NUM_BUILD_THREADS="$2";;
  --hcc) HCC_DRIVER="$2";;
  --scc_hcc) HCC_DRIVER=$SCCHAN_HCC_DRIVER;;
  --hcc_checkout) HCC_DRIVER_CHECKOUT="$2";;
  --llvm_checkout) LLVM_CHECKOUT="$2";;
  --lld_checkout) LLD_CHECKOUT="$2";;
  --arch) HSA_AMDGPU_GPU_TARGET="$2";;
  --bolt) CXXAMP_ENABLE_BOLT="ON";;
  --debug_rt) HCC_RUNTIME_CFLAGS+=-g;;
  --eclipse) 
      PROJECT_GENERATORS="Eclipse CDT4 - Unix Makefiles"
      ;;

  --roc-1.0)
      LIGHTNING="https://github.com/RadeonOpenCompute/llvm.git"
      LIGHTNING_CHECKOUT="roc-1.0"
      HCC_DRIVER_CHECKOUT="roc-1.0"
      AMDPHDRS_CHECKOUT="7187c4f8e6f7bea5c9dcaf8a7010e1fa657d728e"
      ;;

  --roc-1.1)
      #LIGHTNING="https://github.com/RadeonOpenCompute/llvm.git"
      #LIGHTNING_CHECKOUT="roc-1.0"
      HCC_DRIVER_CHECKOUT="roc-1.1.x"
      #AMDPHDRS_CHECKOUT="7187c4f8e6f7bea5c9dcaf8a7010e1fa657d728e"
      ;;

  --debug_cmake) DEBUG_CMAKE="--debug-output";;
  --skip_hcc_checkout) SKIP_HCC_CHECKOUT=1;;
  --help) 
     echo "options: "
     echo "  --build <Release|Debug>"
     echo "  --threads <threads>"
     echo "  --hcc <git url for hcc driver>"
     echo "  --scc_hcc"
     echo "  --hcc_checkout <branch>"
     echo "  --llvm_checkout <LC branch>"
     echo "  --lld_checkout <lld branch>"
     echo "  --arch <fuji|kaveri|carrizo>"
     echo "  --bolt <ON|OFF>"
     echo "  --debug_rt"
     echo "  --eclipse"
     echo "  --roc-1.0"
     echo "  --roc-1.1"
     echo "  --debug_cmake"
     echo "  --skip_hcc_checkout"
     echo "  --help"
     exit
     ;;
  *);;
  esac; shift
done

echo "hcc: $HCC_DRIVER"
echo "hcc-clang: $CLANG_URL"

git clone $LIGHTNING
cd llvm
git checkout $LIGHTNING_CHECKOUT
cd ..

# lld
cd llvm/tools
git clone https://github.com/llvm-mirror/lld.git
cd lld
git checkout $LLD_CHECKOUT
cd ..

# plain vanilla clang
#git clone https://github.com/llvm-mirror/clang.git

cd ../..

#build llvm,lld,clang

LC_INSTALL_PATH=/opt/rocm/llvm

cd llvm
mkdir build
cd build
cmake -DCMAKE_INSTALL_PREFIX=$LC_INSTALL_PATH -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE -DLLVM_TARGETS_TO_BUILD="AMDGPU;X86" ..
make -j $NUM_THREADS
sudo make install
cd ../..


AMDPHDRS_DIR=/opt/rocm/bin

git clone https://github.com/RadeonOpenCompute/LLVM-AMDGPU-Assembler-Extra.git
cd LLVM-AMDGPU-Assembler-Extra
git checkout $AMDPHDRS_CHECKOUT
mkdir build
cd build
cmake  -DLLVM_DIR=../llvm/build  ..
make -j  $NUM_THREADS
sudo mkdir -p $AMDPHDRS_DIR
sudo cp -f amdphdrs/amdphdrs $AMDPHDRS_DIR
cd ../..


# build hcc with lightning
#MY_LLVM_BIN=$(readlink -f llvm/build/bin)
MY_LLVM_BIN=$LC_INSTALL_PATH/bin

HCC_INSTALL_PATH=/opt/rocm/hcc-lc

if [ $SKIP_HCC_CHECKOUT -eq 0 ]
then 
  git clone $HCC_DRIVER
  cd hcc
  git checkout $HCC_DRIVER_CHECKOUT
  cd ..
fi

mkdir build
cd build

cmake $DEBUG_CMAKE  ../hcc \
-DCMAKE_INSTALL_PREFIX=$HCC_INSTALL_PATH \
-DCXXAMP_ENABLE_BOLT=$CXXAMP_ENABLE_BOLT \
-DNUM_BUILD_THREADS=$NUM_THREADS \
-DHSA_USE_AMDGPU_BACKEND=ON \
-DHSA_LLVM_BIN_DIR=$MY_LLVM_BIN \
-DHSA_AMDGPU_GPU_TARGET=$HSA_AMDGPU_GPU_TARGET \
-DHCC_RUNTIME_CFLAGS=\"$HCC_RUNTIME_CFLAGS\" \
-DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
-G"$PROJECT_GENERATORS" \
-DAMDPHDRS_DIR=$AMDPHDRS_DIR


#-DHSA_LIBRARY=$MY_HSA_LIB \
#-DHSA_KMT_LIBRARY=$MY_KMT \
#-DHSA_HEADER=$MY_HSA_INC 

make -j $NUM_THREADS world
make -j $NUM_THREADS


